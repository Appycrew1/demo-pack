import Jimp from "jimp";export async function downloadToBuffer(url:string):Promise<Buffer|null>{try{const r=await fetch(url,{redirect:"follow"});if(!r.ok)return null;const ab=await r.arrayBuffer();return Buffer.from(ab);}catch{return null;}}export async function dominantHexFromImage(buf:Buffer):Promise<string>{const img=await Jimp.read(buf);img.resize(48,48);let r=0,g=0,b=0,c=0;for(let y=0;y<img.getHeight();y++){for(let x=0;x<img.getWidth();x++){const p=Jimp.intToRGBA(img.getPixelColor(x,y));if(p.a>10){r+=p.r;g+=p.g;b+=p.b;c++;}}}if(!c)return "#3b82f6";const toHex=(v:number)=>Math.max(0,Math.min(255,Math.round(v))).toString(16).padStart(2,"0");return `#${toHex(r/c)}${toHex(g/c)}${toHex(b/c)}`;}
